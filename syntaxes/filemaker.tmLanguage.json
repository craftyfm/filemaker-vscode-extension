{
  "name": "FileMaker",
  "scopeName": "source.filemaker",
  "fileTypes": [
    "fmfunc",
    "filemaker",
    "fm",
    "fmfn",
    "calc"
  ],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#let-bindings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#case-result"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.filemaker",
          "match": "//.*$"
        },
        {
          "name": "comment.block.filemaker",
          "begin": "/\\*",
          "end": "\\*/",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.begin.filemaker"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.end.filemaker"
            }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.filemaker",
          "begin": "\"",
          "end": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.filemaker"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.filemaker"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.filemaker",
              "match": "\\\\.\""
            },
            {
              "name": "constant.character.escape.filemaker",
              "match": "\\\\\""
            }
          ]
        }
      ]
    },
    "let-bindings": {
      "patterns": [
        {
          "name": "variable.parameter.let.filemaker",
          "match": "\\b[A-Za-z_][A-Za-z0-9_]*(?=\\s*=)"
        }
      ]
    },
    "case-result": {
      "patterns": [
        {
          "name": "variable.result.case.filemaker",
          "match": ";[\\s\\r\\n]*([A-Za-z_][A-Za-z0-9_]*)[\\s\\r\\n]*\\)[\\s\\r\\n]*;",
          "captures": {
            "1": {
              "name": "variable.result.case.filemaker"
            }
          }
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.filemaker",
          "match": "\\$\\$?[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.unscoped.filemaker",
          "match": "\\b[a-z_][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.filemaker",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.filemaker",
          "match": "\\b(Let|If|Case|Choose|While|Evaluate|Not|IsEmpty|PatternCount)\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "support.function.filemaker",
          "match": "\\b(Abs|Ceiling|Floor|Left|Right|Middle|Substitute|Get[ A-Za-z0-9]*)\\b"
        },
        {
          "name": "entity.name.function.filemaker",
          "match": "\\b[A-Za-z_][A-Za-z0-9_]*(?=\\s*\\()"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.filemaker",
          "match": "[-+*/=<>]"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.separator.comma.filemaker",
          "match": ","
        },
        {
          "name": "punctuation.section.group.begin.filemaker",
          "match": "\\("
        },
        {
          "name": "punctuation.section.group.end.filemaker",
          "match": "\\)"
        }
      ]
    }
  }
}